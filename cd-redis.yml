# example label to apply -> flexDiscoveryRedis="t=redis,c=redis,tt=img,tm=contains"
# if using kubernetes -> flexDiscoveryRedis:"t_redis.c_redis.tt_img.tm_contains"
---
name: redisFlex
apis:
  - name: redis
    entity: ${auto:ip}
    entity_type: redisFlex
    event_type: RedisSample2
    commands:
      - dial: ${auto:ip}:6379
        run: "info\r\n"
        split_by: ":"
    remove_keys: # remove any keys that contain any of the following strings
      - human
    snake_to_camel: true
    perc_to_decimal: true
    sub_parse:
      - type: prefix
        key: db
        split_by:
          - ","
          - "="
    custom_attributes:
      targetHost: ${auto:host}
      targetPort: 6379
    metric_parser:
      metrics:
        totalNetInputBytes: RATE
        rate$: RATE
      namespace: # you can create a namespace with a custom attribute, or chain together existing attributes, else it will default
        custom_attr: "${auto:ip}:6379"
      auto_set: true ### switches metric parser to use regex rather then direct match
